/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React  from "react";
import { useGLTF } from "@react-three/drei";

interface GrassInterface {
  scale?: [number, number, number];
  rotation?: [number, number, number];
  position?: [number, number, number];
  color: string;
}

export type Ref = any;

const Grass = React.forwardRef<Ref, GrassInterface>((props, ref) => {
  const { nodes, materials } = useGLTF("/grass.gltf");
  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh
        material={nodes.Cone004.material}
        geometry={nodes.Cone004.geometry}
        scale={[1, 10, 1]}
        position={[0, 0, 0.16]}
        rotation={[-Math.PI, 0.19, -Math.PI]}
      >
        <meshPhongMaterial color={props.color} />
      </mesh>
    </group>
  );
});

useGLTF.preload("/grass.gltf");

export default Grass;
